#include <stdio.h>
#include <unistd.h>

int main() {
    pid_t pid, ppid;

    // Create a new process
    pid_t child_pid = fork();

    if (child_pid < 0) {
        // Error occurred
        perror("Fork failed");
        return 1;
    } else if (child_pid == 0) {
        // Child process
        pid = getpid();    // Get the child process ID
        ppid = getppid();  // Get the parent process ID of the child process
        printf("Child Process:\n");
        printf("Process ID (PID): %d\n", pid);
        printf("Parent Process ID (PPID): %d\n", ppid);
    } else {
        // Parent process
        pid = getpid();    // Get the parent process ID
        ppid = getppid();  // Get the parent process ID of the parent process (typically the shell)
        printf("Parent Process:\n");
        printf("Process ID (PID): %d\n", pid);
        printf("Parent Process ID (PPID): %d\n", ppid);
        
        // Optionally, wait for the child process to complete
        wait(NULL);
    }

    return 0;
}
